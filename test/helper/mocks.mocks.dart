// Mocks generated by Mockito 5.4.5 from annotations
// in movie_verse/test/helper/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i7;

import 'package:drift/drift.dart' as _i4;
import 'package:drift/src/runtime/executor/stream_queries.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i11;
import 'package:movie_verse/core/db/drift_db.dart' as _i5;
import 'package:movie_verse/core/navigation/app_navigator.dart' as _i8;
import 'package:movie_verse/core/network/models/dto_movie.dart' as _i10;
import 'package:movie_verse/core/network/models/dto_movie_details.dart' as _i3;
import 'package:movie_verse/core/network/models/dto_paged.dart' as _i2;
import 'package:movie_verse/core/network/tmdb_api.dart' as _i9;
import 'package:movie_verse/domain/repositories/movie_repository.dart' as _i12;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePagedResponse_0<T> extends _i1.SmartFake
    implements _i2.PagedResponse<T> {
  _FakePagedResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMovieDetailsDto_1 extends _i1.SmartFake
    implements _i3.MovieDetailsDto {
  _FakeMovieDetailsDto_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrationStrategy_2 extends _i1.SmartFake
    implements _i4.MigrationStrategy {
  _FakeMigrationStrategy_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$MoviesTable_3 extends _i1.SmartFake implements _i5.$MoviesTable {
  _Fake$MoviesTable_3(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$TrendingTable_4 extends _i1.SmartFake
    implements _i5.$TrendingTable {
  _Fake$TrendingTable_4(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$NowPlayingTable_5 extends _i1.SmartFake
    implements _i5.$NowPlayingTable {
  _Fake$NowPlayingTable_5(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$BookmarksTable_6 extends _i1.SmartFake
    implements _i5.$BookmarksTable {
  _Fake$BookmarksTable_6(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$SearchResultsTable_7 extends _i1.SmartFake
    implements _i5.$SearchResultsTable {
  _Fake$SearchResultsTable_7(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _Fake$AppDatabaseManager_8 extends _i1.SmartFake
    implements _i5.$AppDatabaseManager {
  _Fake$AppDatabaseManager_8(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeneratedDatabase_9 extends _i1.SmartFake
    implements _i4.GeneratedDatabase {
  _FakeGeneratedDatabase_9(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDriftDatabaseOptions_10 extends _i1.SmartFake
    implements _i4.DriftDatabaseOptions {
  _FakeDriftDatabaseOptions_10(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryUpdateRules_11 extends _i1.SmartFake
    implements _i4.StreamQueryUpdateRules {
  _FakeStreamQueryUpdateRules_11(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnection_12 extends _i1.SmartFake
    implements _i4.DatabaseConnection {
  _FakeDatabaseConnection_12(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeQueryExecutor_13 extends _i1.SmartFake implements _i4.QueryExecutor {
  _FakeQueryExecutor_13(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeStreamQueryStore_14 extends _i1.SmartFake
    implements _i6.StreamQueryStore {
  _FakeStreamQueryStore_14(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDatabaseConnectionUser_15 extends _i1.SmartFake
    implements _i4.DatabaseConnectionUser {
  _FakeDatabaseConnectionUser_15(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeMigrator_16 extends _i1.SmartFake implements _i4.Migrator {
  _FakeMigrator_16(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeFuture_17<T1> extends _i1.SmartFake implements _i7.Future<T1> {
  _FakeFuture_17(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeInsertStatement_18<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.InsertStatement<T1, D1> {
  _FakeInsertStatement_18(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUpdateStatement_19<T extends _i4.Table, D> extends _i1.SmartFake
    implements _i4.UpdateStatement<T, D> {
  _FakeUpdateStatement_19(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSimpleSelectStatement_20<T1 extends _i4.HasResultSet, D>
    extends _i1.SmartFake implements _i4.SimpleSelectStatement<T1, D> {
  _FakeSimpleSelectStatement_20(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeJoinedSelectStatement_21<FirstT extends _i4.HasResultSet, FirstD>
    extends _i1.SmartFake implements _i4.JoinedSelectStatement<FirstT, FirstD> {
  _FakeJoinedSelectStatement_21(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeSelectable_22<T> extends _i1.SmartFake implements _i4.Selectable<T> {
  _FakeSelectable_22(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDeleteStatement_23<T1 extends _i4.Table, D1> extends _i1.SmartFake
    implements _i4.DeleteStatement<T1, D1> {
  _FakeDeleteStatement_23(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGenerationContext_24 extends _i1.SmartFake
    implements _i4.GenerationContext {
  _FakeGenerationContext_24(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AppNavigator].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppNavigator extends _i1.Mock implements _i8.AppNavigator {
  MockAppNavigator() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void go(String? location) => super.noSuchMethod(
        Invocation.method(
          #go,
          [location],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [TmdbApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockTmdbApi extends _i1.Mock implements _i9.TmdbApi {
  MockTmdbApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Future<_i2.PagedResponse<_i10.MovieDto>> trending(int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #trending,
          [page],
        ),
        returnValue: _i7.Future<_i2.PagedResponse<_i10.MovieDto>>.value(
            _FakePagedResponse_0<_i10.MovieDto>(
          this,
          Invocation.method(
            #trending,
            [page],
          ),
        )),
      ) as _i7.Future<_i2.PagedResponse<_i10.MovieDto>>);

  @override
  _i7.Future<_i2.PagedResponse<_i10.MovieDto>> nowPlaying(int? page) =>
      (super.noSuchMethod(
        Invocation.method(
          #nowPlaying,
          [page],
        ),
        returnValue: _i7.Future<_i2.PagedResponse<_i10.MovieDto>>.value(
            _FakePagedResponse_0<_i10.MovieDto>(
          this,
          Invocation.method(
            #nowPlaying,
            [page],
          ),
        )),
      ) as _i7.Future<_i2.PagedResponse<_i10.MovieDto>>);

  @override
  _i7.Future<_i2.PagedResponse<_i10.MovieDto>> search(
    String? query,
    int? page,
    bool? includeAdult,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [
            query,
            page,
            includeAdult,
          ],
        ),
        returnValue: _i7.Future<_i2.PagedResponse<_i10.MovieDto>>.value(
            _FakePagedResponse_0<_i10.MovieDto>(
          this,
          Invocation.method(
            #search,
            [
              query,
              page,
              includeAdult,
            ],
          ),
        )),
      ) as _i7.Future<_i2.PagedResponse<_i10.MovieDto>>);

  @override
  _i7.Future<_i3.MovieDetailsDto> details(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #details,
          [movieId],
        ),
        returnValue:
            _i7.Future<_i3.MovieDetailsDto>.value(_FakeMovieDetailsDto_1(
          this,
          Invocation.method(
            #details,
            [movieId],
          ),
        )),
      ) as _i7.Future<_i3.MovieDetailsDto>);
}

/// A class which mocks [AppDatabase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppDatabase extends _i1.Mock implements _i5.AppDatabase {
  MockAppDatabase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  int get schemaVersion => (super.noSuchMethod(
        Invocation.getter(#schemaVersion),
        returnValue: 0,
      ) as int);

  @override
  _i4.MigrationStrategy get migration => (super.noSuchMethod(
        Invocation.getter(#migration),
        returnValue: _FakeMigrationStrategy_2(
          this,
          Invocation.getter(#migration),
        ),
      ) as _i4.MigrationStrategy);

  @override
  _i5.$MoviesTable get movies => (super.noSuchMethod(
        Invocation.getter(#movies),
        returnValue: _Fake$MoviesTable_3(
          this,
          Invocation.getter(#movies),
        ),
      ) as _i5.$MoviesTable);

  @override
  _i5.$TrendingTable get trending => (super.noSuchMethod(
        Invocation.getter(#trending),
        returnValue: _Fake$TrendingTable_4(
          this,
          Invocation.getter(#trending),
        ),
      ) as _i5.$TrendingTable);

  @override
  _i5.$NowPlayingTable get nowPlaying => (super.noSuchMethod(
        Invocation.getter(#nowPlaying),
        returnValue: _Fake$NowPlayingTable_5(
          this,
          Invocation.getter(#nowPlaying),
        ),
      ) as _i5.$NowPlayingTable);

  @override
  _i5.$BookmarksTable get bookmarks => (super.noSuchMethod(
        Invocation.getter(#bookmarks),
        returnValue: _Fake$BookmarksTable_6(
          this,
          Invocation.getter(#bookmarks),
        ),
      ) as _i5.$BookmarksTable);

  @override
  _i5.$SearchResultsTable get searchResults => (super.noSuchMethod(
        Invocation.getter(#searchResults),
        returnValue: _Fake$SearchResultsTable_7(
          this,
          Invocation.getter(#searchResults),
        ),
      ) as _i5.$SearchResultsTable);

  @override
  _i5.$AppDatabaseManager get managers => (super.noSuchMethod(
        Invocation.getter(#managers),
        returnValue: _Fake$AppDatabaseManager_8(
          this,
          Invocation.getter(#managers),
        ),
      ) as _i5.$AppDatabaseManager);

  @override
  Iterable<_i4.TableInfo<_i4.Table, Object?>> get allTables =>
      (super.noSuchMethod(
        Invocation.getter(#allTables),
        returnValue: <_i4.TableInfo<_i4.Table, Object?>>[],
      ) as Iterable<_i4.TableInfo<_i4.Table, Object?>>);

  @override
  List<_i4.DatabaseSchemaEntity> get allSchemaEntities => (super.noSuchMethod(
        Invocation.getter(#allSchemaEntities),
        returnValue: <_i4.DatabaseSchemaEntity>[],
      ) as List<_i4.DatabaseSchemaEntity>);

  @override
  _i4.GeneratedDatabase get attachedDatabase => (super.noSuchMethod(
        Invocation.getter(#attachedDatabase),
        returnValue: _FakeGeneratedDatabase_9(
          this,
          Invocation.getter(#attachedDatabase),
        ),
      ) as _i4.GeneratedDatabase);

  @override
  _i4.DriftDatabaseOptions get options => (super.noSuchMethod(
        Invocation.getter(#options),
        returnValue: _FakeDriftDatabaseOptions_10(
          this,
          Invocation.getter(#options),
        ),
      ) as _i4.DriftDatabaseOptions);

  @override
  _i4.StreamQueryUpdateRules get streamUpdateRules => (super.noSuchMethod(
        Invocation.getter(#streamUpdateRules),
        returnValue: _FakeStreamQueryUpdateRules_11(
          this,
          Invocation.getter(#streamUpdateRules),
        ),
      ) as _i4.StreamQueryUpdateRules);

  @override
  _i4.DatabaseConnection get connection => (super.noSuchMethod(
        Invocation.getter(#connection),
        returnValue: _FakeDatabaseConnection_12(
          this,
          Invocation.getter(#connection),
        ),
      ) as _i4.DatabaseConnection);

  @override
  _i4.SqlTypes get typeMapping => (super.noSuchMethod(
        Invocation.getter(#typeMapping),
        returnValue: _i11.dummyValue<_i4.SqlTypes>(
          this,
          Invocation.getter(#typeMapping),
        ),
      ) as _i4.SqlTypes);

  @override
  _i4.QueryExecutor get executor => (super.noSuchMethod(
        Invocation.getter(#executor),
        returnValue: _FakeQueryExecutor_13(
          this,
          Invocation.getter(#executor),
        ),
      ) as _i4.QueryExecutor);

  @override
  _i6.StreamQueryStore get streamQueries => (super.noSuchMethod(
        Invocation.getter(#streamQueries),
        returnValue: _FakeStreamQueryStore_14(
          this,
          Invocation.getter(#streamQueries),
        ),
      ) as _i6.StreamQueryStore);

  @override
  _i4.DatabaseConnectionUser get resolvedEngine => (super.noSuchMethod(
        Invocation.getter(#resolvedEngine),
        returnValue: _FakeDatabaseConnectionUser_15(
          this,
          Invocation.getter(#resolvedEngine),
        ),
      ) as _i4.DatabaseConnectionUser);

  @override
  _i7.Future<void> upsertMovies(Iterable<_i5.MoviesCompanion>? rows) =>
      (super.noSuchMethod(
        Invocation.method(
          #upsertMovies,
          [rows],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> replaceTrending(
    List<int>? ids, {
    int? page = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceTrending,
          [ids],
          {#page: page},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> replaceNowPlaying(
    List<int>? ids, {
    int? page = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #replaceNowPlaying,
          [ids],
          {#page: page},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> setSearchResults(
    String? q,
    List<int>? ids,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSearchResults,
          [
            q,
            ids,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> toggleBookmark(int? movieId) => (super.noSuchMethod(
        Invocation.method(
          #toggleBookmark,
          [movieId],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #clearBookmarks,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchTrendingMovies({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTrendingMovies,
          [],
          {#page: page},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchTrendingMoviesUpTo({int? upToPage = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTrendingMoviesUpTo,
          [],
          {#upToPage: upToPage},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchNowPlayingMovies({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNowPlayingMovies,
          [],
          {#page: page},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchNowPlayingMoviesUpTo(
          {int? upToPage = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNowPlayingMoviesUpTo,
          [],
          {#upToPage: upToPage},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #watchBookmarks,
          [],
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<_i5.MovieRow?> watchMovie(int? id) => (super.noSuchMethod(
        Invocation.method(
          #watchMovie,
          [id],
        ),
        returnValue: _i7.Stream<_i5.MovieRow?>.empty(),
      ) as _i7.Stream<_i5.MovieRow?>);

  @override
  _i7.Stream<bool> watchIsBookmarked(int? id) => (super.noSuchMethod(
        Invocation.method(
          #watchIsBookmarked,
          [id],
        ),
        returnValue: _i7.Stream<bool>.empty(),
      ) as _i7.Stream<bool>);

  @override
  _i4.Migrator createMigrator() => (super.noSuchMethod(
        Invocation.method(
          #createMigrator,
          [],
        ),
        returnValue: _FakeMigrator_16(
          this,
          Invocation.method(
            #createMigrator,
            [],
          ),
        ),
      ) as _i4.Migrator);

  @override
  _i7.Future<void> beforeOpen(
    _i4.QueryExecutor? executor,
    _i4.OpeningDetails? details,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #beforeOpen,
          [
            executor,
            details,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> close() => (super.noSuchMethod(
        Invocation.method(
          #close,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<Map<String, Object?>>> createStream(
          _i6.QueryStreamFetcher? stmt) =>
      (super.noSuchMethod(
        Invocation.method(
          #createStream,
          [stmt],
        ),
        returnValue: _i7.Stream<List<Map<String, Object?>>>.empty(),
      ) as _i7.Stream<List<Map<String, Object?>>>);

  @override
  T alias<T, D>(
    _i4.ResultSetImplementation<T, D>? table,
    String? alias,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #alias,
          [
            table,
            alias,
          ],
        ),
        returnValue: _i11.dummyValue<T>(
          this,
          Invocation.method(
            #alias,
            [
              table,
              alias,
            ],
          ),
        ),
      ) as T);

  @override
  void markTablesUpdated(Iterable<_i4.TableInfo<_i4.Table, dynamic>>? tables) =>
      super.noSuchMethod(
        Invocation.method(
          #markTablesUpdated,
          [tables],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void notifyUpdates(Set<_i4.TableUpdate>? updates) => super.noSuchMethod(
        Invocation.method(
          #notifyUpdates,
          [updates],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i7.Stream<Set<_i4.TableUpdate>> tableUpdates(
          [_i4.TableUpdateQuery? query = const _i4.TableUpdateQuery.any()]) =>
      (super.noSuchMethod(
        Invocation.method(
          #tableUpdates,
          [query],
        ),
        returnValue: _i7.Stream<Set<_i4.TableUpdate>>.empty(),
      ) as _i7.Stream<Set<_i4.TableUpdate>>);

  @override
  _i7.Future<T> doWhenOpened<T>(
          _i7.FutureOr<T> Function(_i4.QueryExecutor)? fn) =>
      (super.noSuchMethod(
        Invocation.method(
          #doWhenOpened,
          [fn],
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #doWhenOpened,
                  [fn],
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_17<T>(
              this,
              Invocation.method(
                #doWhenOpened,
                [fn],
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i4.InsertStatement<T, D> into<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #into,
          [table],
        ),
        returnValue: _FakeInsertStatement_18<T, D>(
          this,
          Invocation.method(
            #into,
            [table],
          ),
        ),
      ) as _i4.InsertStatement<T, D>);

  @override
  _i4.UpdateStatement<Tbl, R> update<Tbl extends _i4.Table, R>(
          _i4.TableInfo<Tbl, R>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [table],
        ),
        returnValue: _FakeUpdateStatement_19<Tbl, R>(
          this,
          Invocation.method(
            #update,
            [table],
          ),
        ),
      ) as _i4.UpdateStatement<Tbl, R>);

  @override
  _i4.SimpleSelectStatement<T, R> select<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #select,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeSimpleSelectStatement_20<T, R>(
          this,
          Invocation.method(
            #select,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.SimpleSelectStatement<T, R>);

  @override
  _i4.JoinedSelectStatement<T, R> selectOnly<T extends _i4.HasResultSet, R>(
    _i4.ResultSetImplementation<T, R>? table, {
    bool? distinct = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectOnly,
          [table],
          {#distinct: distinct},
        ),
        returnValue: _FakeJoinedSelectStatement_21<T, R>(
          this,
          Invocation.method(
            #selectOnly,
            [table],
            {#distinct: distinct},
          ),
        ),
      ) as _i4.JoinedSelectStatement<T, R>);

  @override
  _i4.Selectable<_i4.TypedResult> selectExpressions(
          Iterable<_i4.Expression<Object>>? columns) =>
      (super.noSuchMethod(
        Invocation.method(
          #selectExpressions,
          [columns],
        ),
        returnValue: _FakeSelectable_22<_i4.TypedResult>(
          this,
          Invocation.method(
            #selectExpressions,
            [columns],
          ),
        ),
      ) as _i4.Selectable<_i4.TypedResult>);

  @override
  _i4.DeleteStatement<T, D> delete<T extends _i4.Table, D>(
          _i4.TableInfo<T, D>? table) =>
      (super.noSuchMethod(
        Invocation.method(
          #delete,
          [table],
        ),
        returnValue: _FakeDeleteStatement_23<T, D>(
          this,
          Invocation.method(
            #delete,
            [table],
          ),
        ),
      ) as _i4.DeleteStatement<T, D>);

  @override
  _i7.Future<int> customUpdate(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customUpdate,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<int> customInsert(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customInsert,
          [query],
          {
            #variables: variables,
            #updates: updates,
          },
        ),
        returnValue: _i7.Future<int>.value(0),
      ) as _i7.Future<int>);

  @override
  _i7.Future<List<_i4.QueryRow>> customWriteReturning(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.TableInfo<_i4.Table, dynamic>>? updates,
    _i4.UpdateKind? updateKind,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customWriteReturning,
          [query],
          {
            #variables: variables,
            #updates: updates,
            #updateKind: updateKind,
          },
        ),
        returnValue: _i7.Future<List<_i4.QueryRow>>.value(<_i4.QueryRow>[]),
      ) as _i7.Future<List<_i4.QueryRow>>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelect(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelect,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_22<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelect,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i4.Selectable<_i4.QueryRow> customSelectQuery(
    String? query, {
    List<_i4.Variable<Object>>? variables = const [],
    Set<_i4.ResultSetImplementation<dynamic, dynamic>>? readsFrom = const {},
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #customSelectQuery,
          [query],
          {
            #variables: variables,
            #readsFrom: readsFrom,
          },
        ),
        returnValue: _FakeSelectable_22<_i4.QueryRow>(
          this,
          Invocation.method(
            #customSelectQuery,
            [query],
            {
              #variables: variables,
              #readsFrom: readsFrom,
            },
          ),
        ),
      ) as _i4.Selectable<_i4.QueryRow>);

  @override
  _i7.Future<void> customStatement(
    String? statement, [
    List<dynamic>? args,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #customStatement,
          [
            statement,
            args,
          ],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<T> transaction<T>(
    _i7.Future<T> Function()? action, {
    bool? requireNew = false,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #transaction,
          [action],
          {#requireNew: requireNew},
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #transaction,
                  [action],
                  {#requireNew: requireNew},
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_17<T>(
              this,
              Invocation.method(
                #transaction,
                [action],
                {#requireNew: requireNew},
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i7.Future<T> exclusively<T>(_i7.Future<T> Function()? action) =>
      (super.noSuchMethod(
        Invocation.method(
          #exclusively,
          [action],
        ),
        returnValue: _i11.ifNotNull(
              _i11.dummyValueOrNull<T>(
                this,
                Invocation.method(
                  #exclusively,
                  [action],
                ),
              ),
              (T v) => _i7.Future<T>.value(v),
            ) ??
            _FakeFuture_17<T>(
              this,
              Invocation.method(
                #exclusively,
                [action],
              ),
            ),
      ) as _i7.Future<T>);

  @override
  _i7.Future<void> batch(_i7.FutureOr<void> Function(_i4.Batch)? runInBatch) =>
      (super.noSuchMethod(
        Invocation.method(
          #batch,
          [runInBatch],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i4.GenerationContext $write(
    _i4.Component? component, {
    bool? hasMultipleTables,
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$write,
          [component],
          {
            #hasMultipleTables: hasMultipleTables,
            #startIndex: startIndex,
          },
        ),
        returnValue: _FakeGenerationContext_24(
          this,
          Invocation.method(
            #$write,
            [component],
            {
              #hasMultipleTables: hasMultipleTables,
              #startIndex: startIndex,
            },
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  _i4.GenerationContext $writeInsertable(
    _i4.TableInfo<_i4.Table, dynamic>? table,
    _i4.Insertable<dynamic>? insertable, {
    int? startIndex,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #$writeInsertable,
          [
            table,
            insertable,
          ],
          {#startIndex: startIndex},
        ),
        returnValue: _FakeGenerationContext_24(
          this,
          Invocation.method(
            #$writeInsertable,
            [
              table,
              insertable,
            ],
            {#startIndex: startIndex},
          ),
        ),
      ) as _i4.GenerationContext);

  @override
  String $expandVar(
    int? start,
    int? amount,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #$expandVar,
          [
            start,
            amount,
          ],
        ),
        returnValue: _i11.dummyValue<String>(
          this,
          Invocation.method(
            #$expandVar,
            [
              start,
              amount,
            ],
          ),
        ),
      ) as String);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i12.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i7.Stream<List<_i5.MovieRow>> watchTrending({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTrending,
          [],
          {#page: page},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchNowPlaying({int? page = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNowPlaying,
          [],
          {#page: page},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchTrendingUpTo({int? upToPage = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchTrendingUpTo,
          [],
          {#upToPage: upToPage},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchNowPlayingUpTo({int? upToPage = 1}) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchNowPlayingUpTo,
          [],
          {#upToPage: upToPage},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #watchBookmarks,
          [],
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Stream<_i5.MovieRow?> watchMovie(int? id) => (super.noSuchMethod(
        Invocation.method(
          #watchMovie,
          [id],
        ),
        returnValue: _i7.Stream<_i5.MovieRow?>.empty(),
      ) as _i7.Stream<_i5.MovieRow?>);

  @override
  _i7.Stream<bool> watchIsBookmarked(int? id) => (super.noSuchMethod(
        Invocation.method(
          #watchIsBookmarked,
          [id],
        ),
        returnValue: _i7.Stream<bool>.empty(),
      ) as _i7.Stream<bool>);

  @override
  _i7.Future<bool> refreshTrending({int? page = 1}) => (super.noSuchMethod(
        Invocation.method(
          #refreshTrending,
          [],
          {#page: page},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<bool> refreshNowPlaying({int? page = 1}) => (super.noSuchMethod(
        Invocation.method(
          #refreshNowPlaying,
          [],
          {#page: page},
        ),
        returnValue: _i7.Future<bool>.value(false),
      ) as _i7.Future<bool>);

  @override
  _i7.Future<void> refreshMovie(int? id) => (super.noSuchMethod(
        Invocation.method(
          #refreshMovie,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> refreshSearch(
    String? query, {
    int? page = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #refreshSearch,
          [query],
          {#page: page},
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Stream<List<_i5.MovieRow>> watchSearch(
    String? query, {
    int? page = 1,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #watchSearch,
          [query],
          {#page: page},
        ),
        returnValue: _i7.Stream<List<_i5.MovieRow>>.empty(),
      ) as _i7.Stream<List<_i5.MovieRow>>);

  @override
  _i7.Future<void> toggleBookmark(int? id) => (super.noSuchMethod(
        Invocation.method(
          #toggleBookmark,
          [id],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);

  @override
  _i7.Future<void> clearBookmarks() => (super.noSuchMethod(
        Invocation.method(
          #clearBookmarks,
          [],
        ),
        returnValue: _i7.Future<void>.value(),
        returnValueForMissingStub: _i7.Future<void>.value(),
      ) as _i7.Future<void>);
}
